{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlFor","Alert","style","height","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","setAlert","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toLocaleLowerCase","navigator","clipboard","writeText","setTimeout","split","join","filter","element","length","About","myStyle","border","aria-labelledby","data-bs-parent","defaultProps","App","setMode","Fragment","document","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"6KAIe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAA1C,QAAAD,OAAqDL,EAAMM,OACvEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,eAAeI,GAAG,KAAKR,EAAMS,OAC7CR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1Ld,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BY,GAAG,0BAC3Cf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASH,UAAU,WAAWa,eAAa,OAAOT,GAAG,KAArD,SAEFP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAG,SAASR,EAAMkB,aAGjDjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBe,QAASnB,EAAMoB,WAAYV,KAAK,WAAWW,KAAK,SAASL,GAAG,2BAChGf,EAAAC,EAAAC,cAAA,SAAOC,UAAS,yBAAAC,OAA0C,UAAfL,EAAMM,KAAmB,OAAS,SAAWgB,QAAQ,0BAAhG,iBCrBG,SAASC,EAAMvB,GAM1B,OACIC,EAAAC,EAAAC,cAAA,OAAKqB,MAAO,CAACC,OAAQ,SACpBzB,EAAM0B,OAASzB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBL,EAAM0B,MAAMhB,KAA7B,gCAAiEW,KAAK,SAChGpB,EAAAC,EAAAC,cAAA,cARW,SAACwB,GAChB,IAAIC,EAAQD,EAAKE,cACjB,OAAOD,EAAME,OAAO,GAAGC,cAAgBH,EAAMI,MAAM,GAMtCC,CAAWjC,EAAM0B,MAAMhB,MAAhC,KADY,IACsCV,EAAM0B,MAAMQ,MCT3D,SAASC,EAASnC,GAAO,IAAAoC,EACZC,mBAAS,IADGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC7BK,EAD6BH,EAAA,GACvBI,EADuBJ,EAAA,GAAAK,EAEXN,mBAAS,MAFEO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE7BjB,EAF6BkB,EAAA,GAEvBC,EAFuBD,EAAA,GA+BpC,OACI3C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACoB,EAAD,CAAOG,MAAOA,IACdzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBoB,MAAO,CAACsB,MAAoB,UAAb9C,EAAMM,KAAiB,QAAQ,UAC1EL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,UAAKH,EAAM+C,SACX9C,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAe4C,MAAOP,EAAMQ,SAzBzC,SAACC,GACpBR,EAAQQ,EAAMC,OAAOH,QAwBiEhC,GAAG,QAAQoC,KAAK,IAAI5B,MAAO,CAACsB,MAAoB,UAAb9C,EAAMM,KAAiB,QAAQ,QAAS+C,gBAA8B,UAAbrD,EAAMM,KAAiB,QAAQ,cAEzML,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,4BAA4Be,QAnClD,WAClB,IAAImC,EAAUb,EAAKV,cACnBW,EAAQY,KAiCA,wBACArD,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,4BAA4Be,QAhCjD,WACnB,IAAImC,EAAUb,EAAKc,oBACnBb,EAAQY,KA8BA,wBACArD,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,4BAA4Be,QA1BvD,WACbqC,UAAUC,UAAUC,UAAUjB,GAC9BI,EAAS,CACLX,IAAK,sBACLxB,KAAM,YAEViD,WAAW,WACPd,EAAS,OACX,OAkBM,qBACA5C,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,4BAA4Be,QAjBnD,WACjB,IAAImC,EAAUb,EAAKmB,MAAM,UACzBlB,EAAQY,EAAQO,KAAK,QAeb,wBAEJ5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBoB,MAAO,CAACsB,MAAoB,UAAb9C,EAAMM,KAAiB,QAAQ,UAC1EL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAIsC,EAAKmB,MAAM,OAAOE,OAAO,SAACC,GAAW,MAAiB,KAAVA,IAAeC,OAA/D,WAA+EvB,EAAKuB,OAApF,gBAA0K,KAAjEvB,EAAKmB,MAAM,KAAKE,OAAO,SAACC,GAAW,MAAiB,KAAVA,IAAeC,OAAlK,mBC9CD,SAASC,EAAMjE,GAE1B,IAAIkE,EAAU,CACVpB,MAAsB,SAAf9C,EAAMM,KAAkB,QAAU,QACzC+C,gBAAgC,SAAfrD,EAAMM,KAAkB,UAAY,QACrD6D,OAAQ,mBAGZ,OACIlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYoB,MAAO,CAACsB,MAAsB,SAAf9C,EAAMM,KAAkB,QAAU,UACxEL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYY,GAAG,mBAAmBQ,MAAO0C,GACpDjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBoB,MAAO0C,GACnCjE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBY,GAAG,cAChCf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmBoB,MAAO0C,EAASxD,KAAK,SAASC,iBAAe,WAAWC,iBAAe,eAAeE,gBAAc,OAAOD,gBAAc,eAC1JZ,EAAAC,EAAAC,cAAA,sCAGRF,EAAAC,EAAAC,cAAA,OAAKa,GAAG,cAAcZ,UAAU,mCAAmCgE,kBAAgB,aAAaC,iBAAe,qBAC3GpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,gJAKRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBoB,MAAO0C,GACnCjE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBY,GAAG,cAChCf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6BoB,MAAO0C,EAASxD,KAAK,SAASC,iBAAe,WAAWC,iBAAe,eAAeE,gBAAc,QAAQD,gBAAc,eACrKZ,EAAAC,EAAAC,cAAA,+BAGRF,EAAAC,EAAAC,cAAA,OAAKa,GAAG,cAAcZ,UAAU,8BAA8BgE,kBAAgB,aAAaC,iBAAe,qBACtGpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,yPAKRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBoB,MAAO0C,GACnCjE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBY,GAAG,gBAChCf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6BoB,MAAO0C,EAASxD,KAAK,SAASC,iBAAe,WAAWC,iBAAe,iBAAiBE,gBAAc,QAAQD,gBAAc,iBACvKZ,EAAAC,EAAAC,cAAA,uCAGRF,EAAAC,EAAAC,cAAA,OAAKa,GAAG,gBAAgBZ,UAAU,8BAA8BgE,kBAAgB,eAAeC,iBAAe,qBAC1GpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,yNHRxBL,EAAOuE,aAAe,CACpB7D,MAAO,iBACPS,UAAW,kCINEqD,MA1Bf,WAAe,IAAAnC,EACWC,mBAAS,SADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACN9B,EADMgC,EAAA,GACAkC,EADAlC,EAAA,GAeb,OACErC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuE,SAAA,KACExE,EAAAC,EAAAC,cAACJ,EAAD,CAAQU,MAAM,YAAYS,UAAU,QAAQZ,KAAMA,EAAMc,WAdzC,WACJ,UAATd,GACFkE,EAAQ,QACRE,SAASC,KAAKnD,MAAM6B,gBAAkB,YAGtCmB,EAAQ,SACRE,SAASC,KAAKnD,MAAM6B,gBAAkB,YAQtCpD,EAAAC,EAAAC,cAACyE,EAAA,EAAD,KACE3E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIf,QAAS9D,EAAAC,EAAAC,cAACgC,EAAD,CAAUY,QAAQ,2BAA2BzC,KAAMA,MAClFL,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQf,QAAS9D,EAAAC,EAAAC,cAAC8D,EAAD,CAAO3D,KAAMA,SCfzCyE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWnB,SAASoB,eAAe,SACpDC,OACH9F,EAAAC,EAAAC,cAACF,EAAAC,EAAM8F,WAAP,KACE/F,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAC8F,EAAD,SAQNlB","file":"static/js/main.57a43af2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"about\">{props.aboutText}</Link>\r\n            </li>\r\n          </ul>\r\n          <div className=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n}\r\n\r\n//default props in case if props are not passed\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  aboutText: \"set about info here\",\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}:</strong> {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Alert from './Alert';\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n    const [alert,setAlert] = useState(null);\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleLowClick = () => {\r\n        let newText = text.toLocaleLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const copyText = ()=>{\r\n        navigator.clipboard.writeText(text);\r\n        setAlert({\r\n            msg: 'copied to clipboard',\r\n            type: 'success'\r\n        })\r\n        setTimeout(()=>{\r\n            setAlert(null);\r\n        },2000)\r\n    }\r\n    const removeSpaces = ()=>{\r\n        let newText = text.split(/[' ']+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n\r\n    return (\r\n        <form>\r\n            <Alert alert={alert} />\r\n            <div className='container my-3' style={{color: props.mode==='light' ? 'black':'white'}}>\r\n                <div className=\"mb-3\">\r\n                    <h1>{props.heading}</h1>\r\n                    <textarea className='form-control' value={text} onChange={handleOnChange} id='myBox' rows='5' style={{color: props.mode==='light' ? 'black':'white', backgroundColor: props.mode==='light' ? 'white':'#383849'}}></textarea>\r\n                </div>\r\n                <button type='button' className='btn btn-primary mx-1 my-1' onClick={handleUpClick}>Convert to uppercase</button>\r\n                <button type='button' className='btn btn-primary mx-1 my-1' onClick={handleLowClick}>Convert to lowercase</button>\r\n                <button type='button' className='btn btn-primary mx-1 my-1' onClick={copyText}>Copy to Clipboard</button>\r\n                <button type='button' className='btn btn-primary mx-1 my-1' onClick={removeSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className='container my-3' style={{color: props.mode==='light' ? 'black':'white'}}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(/\\s+/).filter((element)=>{return element!==\"\"}).length} words, {text.length} characters, {text.split(\" \").filter((element)=>{return element!==\"\"}).length* 0.008} minutes read</p>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    let myStyle = {\r\n        color: props.mode === 'dark' ? 'white' : 'black',\r\n        backgroundColor: props.mode === 'dark' ? '#1d2230' : 'white',\r\n        border: 'solid 1px white'\r\n    }\r\n\r\n    return (\r\n        <div className='container' style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\r\n            <h1 className='my-3'>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Analyze Your text </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or extra space removal and more.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Free to use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            TextUtils is a free character counter tool that provides instant character count and word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Browser Compatible </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport { Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#383847';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Routes>\n        <Route exact path=\"/\" element={<TextForm heading=\"Enter text to manipulate\" mode={mode} />} />\n        <Route exact path=\"about\" element={<About mode={mode}/>} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}